name: Build and Deploy to AWS App runner

on:
  push:
    branches:
    - main
  workflow_dispatch:

permissions:
    id-token: write
    contents: read  

env:
  AWS_DEFAULT_REGION: 'ap-south-1'
  ECS_TASK_DEFINITION_FILE: ecs-task-definition.json

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read  
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::096803082364:role/GitHubAuth
        role-session-name: GitHubActionSession
        aws-region: ${{ env.AWS_DEFAULT_REGION }}


    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set image tags
      id: vars
      run: |
        echo "commit_sha=$(echo $GITHUB_SHA | head -c 8)" >> $GITHUB_ENV

    - name: Build and push
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: cloudzenia
        IMAGE_TAG: nodejs-microservice-${{ env.commit_sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Download task definition 
      run: |
        aws ecs describe-task-definition --task-definition nodejs-microservice --query taskDefinition > task-definition.json

    - name: Fill in new image ID in task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json 
        container-name: microservice-container
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1 
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: nodejs-microservice
        cluster: cloudzenia
    # - name: Deploy task definition to ECS service
    #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
    #   with:
    #     service: ${{ env.ECS_SERVICE_NAME }}
    #     cluster: ${{ env.ECS_CLUSTER_NAME }}
    #     task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
    #     wait-for-service-stability: true